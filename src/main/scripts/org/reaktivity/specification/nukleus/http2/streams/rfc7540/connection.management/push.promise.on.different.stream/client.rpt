#
# Copyright 2016-2017 The Reaktivity Project
#
# The Reaktivity Project licenses this file to you under the Apache License,
# version 2.0 (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at:
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

property newClientAcceptRef ${nuklei:newReferenceId()} # external scope
property clientTransport "nukleus://http2/streams/source"
#
# First client-initiated stream
#
connect await ROUTED_CLIENT
        ${clientTransport}
        option nukleus:route ${newClientAcceptRef}
        option nukleus:window 8192
        option nukleus:transmission "duplex"

write nukleus:begin.ext ${http:headers()
                              .item(":method", "POST")
                              .item(":scheme", "http")
                              .item(":path", "/")
                              .item(":authority", "localhost:8080")
                              .item("content-length", "0")
                              .build()}

read nukleus:begin.ext ${http:headers()
                             .item(":status", "200")
                             .item("server", "CERN/3.0 libwww/2.17")
                             .item("date", "Wed, 01 Feb 2017 19:12:46 GMT")
                             .item("content-type", "text/html; charset=UTF-8")
                             .item("content-length", "113")
                             .build()}

connected


# First push promise
read nukleus:data.ext ${http:headers()
                            .item(":method", "GET")
                            .item(":scheme", "http")
                            .item(":path", "/style.css")
                            .item(":authority", "localhost:8080")
                            .build()}
read notify FIRST_PUSH_PROMISE_RECEIVED

# Second push promise
read nukleus:data.ext ${http:headers()
                            .item(":method", "GET")
                            .item(":scheme", "http")
                            .item(":path", "/script.js")
                            .item(":authority", "localhost:8080")
                            .build()}
read notify SECOND_PUSH_PROMISE_RECEIVED

read "<html>"
     "<head><link rel=\"stylesheet\" href=\"styles.css\"></head>"
     "<body><script src=\"script.js\"></script></body>"
     "</html>"


#
# Second client-initiated stream
#
connect await ROUTED_CLIENT
        ${clientTransport}
        option nukleus:route ${newClientAcceptRef}
        option nukleus:window 8192
        option nukleus:transmission "duplex"

write nukleus:begin.ext ${http:headers()
                              .item(":method", "GET")
                              .item(":scheme", "http")
                              .item(":path", "/push")
                              .item(":authority", "localhost:8080")
                              .build()}

read nukleus:begin.ext ${http:headers()
                             .item(":status", "200")
                             .item("server", "CERN/3.0 libwww/2.17")
                             .item("date", "Wed, 01 Feb 2017 19:12:46 GMT")
                             .build()}

connected



#
# First promised request
#
connect await FIRST_PUSH_PROMISE_RECEIVED
        ${clientTransport}
        option nukleus:route ${newClientAcceptRef}
        option nukleus:window 8192
        option nukleus:transmission "duplex"

write nukleus:begin.ext ${http:headers()
                              .item(":method", "GET")
                              .item(":scheme", "http")
                              .item(":path", "/style.css")
                              .item(":authority", "localhost:8080")
                              .build()}

read nukleus:begin.ext ${http:headers()
                             .item(":status", "200")
                             .item("server", "CERN/3.0 libwww/2.17")
                             .item("date", "Wed, 01 Feb 2017 19:12:46 GMT")
                             .item("content-type", "text/css")
                             .item("content-length", "31")
                             .build()}

connected

read nukleus:data.ext ${http:headers()
                            .item(":method", "GET")
                            .item(":scheme", "http")
                            .item(":path", "/widget.css")
                            .item(":authority", "localhost:8080")
                            .build()}

read "h1 {"
     "    color: blue;"
     "}"


#
# Second promised request
#
connect await SECOND_PUSH_PROMISE_RECEIVED
        ${clientTransport}
        option nukleus:route ${newClientAcceptRef}
        option nukleus:window 8192
        option nukleus:transmission "duplex"

write nukleus:begin.ext ${http:headers()
                              .item(":method", "GET")
                              .item(":scheme", "http")
                              .item(":path", "/script.js")
                              .item(":authority", "localhost:8080")
                              .build()}

read nukleus:begin.ext ${http:headers()
                             .item(":status", "200")
                             .item("server", "CERN/3.0 libwww/2.17")
                             .item("date", "Wed, 01 Feb 2017 19:12:46 GMT")
                             .item("content-type", "text/javascript")
                             .item("content-length", "15")
                             .build()}

connected

read "function f() {"
     "}"

